created_at:
  type: string
  in: body
  description: |
    The date and time when the resource was created. The date and time stamp
    format is ISO8601: ``CCYY-MM-DDThh:mm:ssZ``. For example:
    ``2016-01-18T00:00:00Z``

domain:
  type: UUID
  in: body
  description: |
    The ID of the domain a resource is created in.

global_project:
  type: bool
  in: query
  default: False
  optional: True
  description: |
    Indicates whether to include resources for all projects or resources for
    the current project in the response.

    If you are an administrative user and you set this value to ``true``, the
    call returns all resources from all projects. Default is ``false``, which
    returns only resources in the current project.

limit:
  type: int
  in: query
  optional: True
  description: |
    Requests a page size of resources. Returns a number of resources up to the
    limit value. Use the `limit` parameter to make an initial limited request
    and use the ID of the last-seen resource from the response as the `marker`
    parameter value in a subsequent limited request.

marker:
  type: UUID
  in: query
  optional: True
  description: |
    The ID of the last-seen resource. Use the `limit` parameter to make an
    initial limited request and use the ID of the last-seen resource from the
    response as the `marker` parameter value in a subsequent limited request.

metadata:
  type: object
  in: body
  description: |
    Metadata key and value pairs associated with a resource.

microversion:
  type: string
  in: header
  optional: True
  description: |
    API microversion request. It takes the form of
    ``OpenStack-API-Version: clustering 1.0``, where ``1.0`` is the requested
    API version.

name:
  type: string
  in: body
  description:
    The name of the resource.

name_query:
  type: string
  in: query
  optional: True
  description: |
    Filters the response by the ``name`` property of the resource.

policy_type:
  type: object
  in: body
  description: |
    A structured description of a policy type.

policy_type_name:
  type: string
  in: policy_type
  description: |
    The name of the policy type.

policy_type_schema:
  type: object
  in: policy_type
  description: |
    The schema of a policy type. The schema of a policy type varies a lot
    based on the specific type implementation.

policy_type_url:
  type: string
  in: URL
  optional: False
  description: |
    The name of a policy type.

policy_types:
  type: list
  in: body
  description: |
    A list of policy_type objects.

profile:
  type: object
  in: body
  description: |
    A structured description of a profile object.

profile_id:
  type: UUID
  in: body
  description: |
    The UUID of a profile.

profile_id_url:
  type: string
  in: URL
  description: |
    The name, UUID or short-UUID of a profile.

profile_spec:
  type: object
  in: body
  description: |
    The detailed specification of the profile.

profile_type:
  type: object
  in: body
  description: |
    A structured description of a profile type.

profile_type_name:
  type: string
  in: profile_type
  description: |
    The name of the profile type.

profile_type_property:
  type: string
  in: body
  description: |
    The ``type`` property of a profile.

profile_type_schema:
  type: object
  in: profile_type
  description: |
    The schema of a profile type. The schema of a profile type varies
    a lot based on the specific type implementation. All profile types
    share the ``context`` property which is a dictionary for customizing
    the request context to authenticate with a backend service. A common
    usage of this property is to set the ``region_name`` in the dictionary
    so that a node can be created in the specified region. All other
    properties are defined by a particular profile type implementation.

profile_type_url:
  type: string
  in: URL
  optional: False
  description: |
    The name of a profile type.

profile_types:
  type: list
  in: body
  description: |
    A list of profile_type objects.

profiles:
  type: list
  in: body
  description: |
    A list for profile objects.

project:
  type: UUID
  in: body
  description: |
    The ID of the project a resource is created in.

request_id:
  type: UUID
  in: header
  optional: True
  description: |
    A unique ID for tracking service request. The request ID associated
    with the request by default appears in the service logs.

sort:
  type: string
  in: query
  optional: True
  description: |
    Sorts the response by one or more attribute and optional sort direction
    combinations. A valid direction is ``asc`` (ascending) or ``desc``
    (descending). Default direction is ``asc`` (ascending).

    Specify the list as ``<key>[:<direction>]``.

    For example, the following query parameters in the URI sort the resources
    in the response by ``name`` in ascending order and then by ``status`` in
    descending order::

      GET /v2/images?sort=name:asc,status:desc

type_query:
  type: string
  in: query
  optional: True
  description: |
    Filters the response by the ``type`` property of the resource.

updated_at:
  type: string
  in: body
  description: |
    The date and time when the resource was last updated. The date and time
    stamp format is ISO8601: ``CCYY-MM-DDThh:mm:ssZ``. For example:
    ``2016-01-18T00:00:00Z``

user:
  type: UUID
  in: body
  description: |
    The ID of the user a resource is created by.

version:
  type: object
  in: body
  description: |
    The details about a major API version.

version_id:
  type: string
  in: version
  description: |
    The string representation of an API version number, e.g. ``1.0``.

version_links:
  type: list
  in: version
  description: |
    A list of relative URLs to different version objects.

version_max_version:
  type: string
  in: version
  description: |
    The string representation of the maximum microversion supported.

version_media_types:
  type: list
  in: version
  description: |
    A list of content-type based media type request supported.

version_min_version:
  type: string
  in: version
  description: |
    The string representation of the minimum microversion supported.

version_status:
  type: string
  in: version
  description: |
    A string indicating the supporting status of the version.

version_updated:
  type: string
  in: version
  description: |
    The date and time when the version was last updated. The date and time
    stamp format is ISO8601: ``CCYY-MM-DDThh:mm:ssZ``. For example:
    ``2016-01-18T00:00:00Z``

version_url:
  type: string
  in: URL
  optional: False
  description: |
    A string indicating the major version of Clustering API.

versions:
  type: list
  in: body
  description: |
    A list of supported major API versions.
